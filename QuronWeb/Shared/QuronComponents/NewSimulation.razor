

<div class="newSimPage">
    <ul class="flex-container @(InitialLoad ? null : "qp-popin") ">
        @if (PageState == SimPageState.MainPage)
        {

            <li class="flex-module @main_css">
                @*<div class="sim-header">
                        Choose a Simulation Mode
                    </div>*@
                <Module Title="Start a Simulation">
                    <ul class="flex-container">
                        <li class="flex-item" @onclick="@(async () =>
                                                         {
                                                             PageState = SimPageState.SimpleForm;
                                                             await Task.Delay(500);
                                                             form_css = null;
                                                             main_css = "qp-fadein-left";
                                                             StateHasChanged();
                                                         })">
                            @*<img src="assets/simpleSimulation.PNG" alt="Image" style="width:100%;">*@
                            Simple
                        </li>
                        <li class="flex-item">
                            @*<img src="assets/stackedSimulation.PNG" alt="Image" style="width:100%;">*@
                            Stacked
                        </li>
                    </ul>


                </Module>
            </li>
            <li class="flex-module @main_css">
                <Module Title="Recent Simulations">
                    <SimulationLog />
                </Module>
            </li>
        }
        else if (PageState == SimPageState.SimpleForm)
        {



            <li class="flex-module @form_css">

                <Module Title="Settings" OnBackButton="@(async () =>
                                                         {
                                                             PageState = SimPageState.MainPage;
                                                             await Task.Delay(500);
                                                             main_css = null;
                                                             form_css = "qp-fadein-right";
                                                             StateHasChanged();
                                                         })">
                    <SimulationForm />
                </Module>
            </li>


        }
    </ul>


</div>

@code {
    public SimPageState PageState { get; set; } = SimPageState.MainPage;
    public bool InitialLoad;
    public string main_css;
    public string form_css = "qp-fadein-right";
    public string report_css;


    public enum SimPageState
    {
        MainPage,
        SimpleForm,
        SimpleReport,
        StackedForm,
        StackedReport
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {

        });
    }

    protected override void OnInitialized()
    {


    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            await Task.Delay(500);
            InitialLoad = true;
            StateHasChanged();
        }

    }




}


<style>
    .newSimPage {
        flex: 1;
        display: flex;
        flex-flow: row wrap;
        height: 100%;
        width: 100%;
        justify-content: center;
        align-items: center;
    }

    .flex-container {
        /* We first create a flex layout context */
        display: flex;
        /* Then we define the flow direction
              and if we allow the items to wrap
            * Remember this is the same as:
            * flex-direction: row;
            * flex-wrap: wrap;
            */
        flex-flow: row wrap;
        /* Then we define how is distributed the remaining space */
        justify-content: center;
        padding: 25px;
        margin: 25px;
        list-style: none;
    }

    .flex-item {
        display: flex;
        justify-content: center;
        align-items: center;
        background: white; /*#1a1a1e;*/
        /* padding: 5px;*/
        width: 250px;
        height: 250px;
        margin: 1rem;
        line-height: 250px;
        color: #282828;
        font-weight: bold;
        font-size: 1em;
        text-align: center;
        border-radius: 10px;
        transition: ease-in-out 0.1s;
    }

        .flex-item:hover {
            box-shadow: 0 0 6px #e5e5e5;
            cursor: pointer;
            /*background-color: #f3f6f8;*/ /*#1c1c21;*/
        }

    .sim-header {
        color: #282828;
        font-weight: bold;
        font-size: 2em;
        text-align: center;
    }

    .flex-module {
        display: flex;
        flex-flow: column;
        justify-content: center;
        align-items: center;
        padding: 1rem;
    }
</style>
